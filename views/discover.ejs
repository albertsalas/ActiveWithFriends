
<%- include('./partials/header.ejs') %>
 

<script src='https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.js'></script>
<link href='https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css' rel='stylesheet' />
<style>
#map {
  height: 400px;
  /* The height is 400 pixels */
  width: 100%;
  /* The width is the width of the web page */
}
.marker {
background-image: url('/img/marker.png');
background-size: cover;
width: 30px;
height: 30px;
/* border-radius: 25%; */
cursor: pointer;
}

.mapboxgl-popup {
max-width: 200px;
}
h3, p{
  color: black;
}
</style>
<div class="hero is-primary" >
  <%- include('./partials/nav.ejs')  %> 
  <div class="hero-body" style="background-color: rgb(21, 132, 121);">
      <div class="container" style="text-align: center;">
          <h1 class="title">
            Discover
          </h1>
      </div>
  </div>

  <div id='map' style='width: 100%; height: 600px;'></div>

  <div class="tabs is-centered">
    <ul>
      <button class="button is-primary">Streetview</button>
      <button class="button is-primary">Dark</button>
      <button class="button is-primary">Outdoors</button>
      <button class="button is-primary">Satellite</button>
      <button class="button is-primary">Satellite+Streets</button>
    </ul>
  </div>

    
</div>
<%- include('./partials/eventCreation.ejs') %>
<pre id="info"></pre>
<script>
  mapboxgl.accessToken = 'pk.eyJ1IjoicHJveGlpZSIsImEiOiJja2hjbWx5c2IwM3lkMnJzYnhoMnd4Ym0xIn0.wHtiEywv0rY_zEuDDxvEYQ';
  var street = `mapbox://styles/mapbox/streets-v11`;
  var outdoors = `mapbox://styles/mapbox/outdoors-v11`;
  var dark = `mapbox://styles/mapbox/dark-v10`;
  var light = `mapbox://styles/mapbox/light-v10`
  var satellite = `mapbox://styles/mapbox/satellite-v9`;
  var satellite_streets = `mapbox://styles/mapbox/satellite-streets-v11`;
  var startMap = street;
  $("button").on('click', function(){
    console.log($(this).html());

    switch($(this).html()){
      case "Dark": startMap = dark;
              break;
      case "Streetview": startMap = street;
              break;
      case "Outdoors": startMap = outdoors;
              break;
      case "Satellite": startMap = satellite;
              break;
      case "Satellite+Streets": startMap = satellite_streets;
              break;
    }
    loadMap();
  });

  loadMap();
  function loadMap(){




    

    var map = new mapboxgl.Map({
      container: 'map', // container id
      style: startMap,
      center: [-96, 37.8], // starting position
      zoom: 3 // starting zoom
    });
 
    // Add geolocate control to the map.
    map.addControl(
      new mapboxgl.GeolocateControl({
        positionOptions: {
        enableHighAccuracy: true
        },
        trackUserLocation: true
      })
    );

    var geojson = {
  type: 'EventCollection',
  events: [{
    type: 'Event',
    geometry: {
      type: 'Point',
      coordinates: [-77.032, 38.913]
    },
    properties: {
      title: 'Mapbox',
      description: 'Washington, D.C.',
      eventID: 1
    }
  },
  {
    type: 'Event',
    geometry: {
      type: 'Point',
      coordinates: [-122.414, 37.776]
    },
    properties: {
      title: 'Mapbox',
      description: 'San Francisco, California',
      eventID: 2
    }
  }]
};
geojson.events.push({
  type: 'Event',
    geometry: {
      type: 'Point',
      coordinates: [-70.032, 38.913]
    },
    properties: {
      title: 'Mapbox',
      description: 'Washington, D.C.',
      eventID:3
    }
})
geojson.events.forEach(function(marker) {

// create a HTML element for each feature
var el = document.createElement('div');
el.className = 'marker';
el.addEventListener('click', function(e){
    // Prevent the `map.on('click')` from being triggered
    // e.stopPropagation();
  });

// make a marker for each feature and add to the map
new mapboxgl.Marker(el)
  .setLngLat(marker.geometry.coordinates)
  .setPopup(new mapboxgl.Popup({ offset: 25 }) // add popups
  .setHTML('<h3>' + marker.properties.title + '</h3><p>' + marker.properties.description + '</p>'))
  .addTo(map);
});



    
    map.on('click', function (e) {
      console.log();
      $('.eventModal').addClass('is-active');

      document.getElementById('info').innerHTML =
      // e.point is the x, y coordinates of the mousemove event relative
      // to the top-left corner of the map
      JSON.stringify(e.point) +
      '<br />' +
      // e.lngLat is the longitude, latitude geographical position of the event
      JSON.stringify(e.lngLat.wrap());
      $("#test").html(JSON.stringify(e.lngLat.wrap()));
      
      //el
      // var marker = new mapboxgl.Marker(el)
      // .setLngLat([e.lngLat.wrap().lng, e.lngLat.wrap().lat])
      // .setPopup(popup)
      // .addTo(map);
    }); 
    
  }
  
  
  $(".marker").on('click',function(){
      console.log("ZZZZZZZZZZ")
  });
 
 
  

   


</script>




<%- include('./partials/footer.ejs') %>